NOTE

Man mlx

typedef struct 		s_mlx
{
	void			*mlx;
	void			*win;
}					t_mlx;

#include "mlx.h"
#include "./libft/libft.h"

//fonction pour Key hook doit tout le temps retourner des intq
int my_key_funct(int keycode, void *param)//-> Param va etre une structure
{
	ft_printf("key event %d\n", keycode);
	mlx_pixel_put(mlx, win, 300, 300, 0xFF00FF);
	return (1);
}

int main() //RESULTAT 
{
	void *mlx; //identifiant de la connexion
	void *win;
	int x;
	int y;

	//Retourne un void *, initialisation de la mlx
	mlx = mlx_init();
	//Ouvrir la fenetre de x, y qui s'appelera "mlx 42"
	win = mlx_new_window(mlx, 400, 400, "mlx 42");

	y = 50;
	while (y < 150)
	{
		x = 50;
		while (x < 150)
		{
			//Mettre un pixel sur la fenetre
			mlx_pixel_put(mlx, win, x, y, 0x00FFFFFF);
			x++;
		}
		y++;
	}
	mlx_key_hook(win, my_key_funct, 0);
	//Pour la gestion des events et la gestion du systeme graphique MacOS
	//Et surtout pour voir la fenetre
	mlx_loop(mlx);
	return (0);
}

//Pour compiler
cc -o mlx main.c -lmlx -framework OpenGl -framework AppKit